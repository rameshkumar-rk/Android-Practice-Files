package com.example.eventadderapplication;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.ContextMenu;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Adapter;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.Toolbar;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.SimpleTimeZone;

public class MainActivity extends AppCompatActivity{

    Toolbar toolbar;
    ListView listView;
    ArrayList<HashMap<String,String>> arrayList;
    public static int count = 1;
    TextView tname, tdate;
    EditText Esearch;
    SimpleAdapter simpleAdapter;
    String def_name[] = {"Internal-1", "Project", "Assignment", "Birth day", "Fees-DueDate"};
    String def_date[] = {"22/07/2019", "30/09/2019", "02/12/2019", "18/11/2019", "18/11/2019"};
    AdapterView adapterView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        arrayList = new ArrayList<>();

        tname = (TextView) findViewById(R.id.eventName);
        tdate = (TextView) findViewById(R.id.eventDate);

        listView = (ListView) findViewById(R.id.simpleListView);
        Esearch = (EditText) findViewById(R.id.searchQuery);
        Esearch.setSelected(false);
        for(int i=0;i<5;i++) {
            HashMap<String, String> map = new HashMap<>();
            map.put("EventName", def_name[i]);
            map.put("EventDate", def_date[i]);
            arrayList.add(map);
        }
        String[] from={"EventName","EventDate"};//string array
        int[] to={R.id.eventName, R.id.eventDate};//int array of views id's

        simpleAdapter=new SimpleAdapter(this,arrayList,R.layout.listview_display,from,to);//Create object and set the parameters for simpleAdapter
        listView.setTextFilterEnabled(true);
        listView.setAdapter(simpleAdapter);//sets the adapter for listView


        registerForContextMenu(listView);
    }

    @Override
    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo contextMenuInfo){
        super.onCreateContextMenu(menu, v, contextMenuInfo);
        MenuInflater inflater = getMenuInflater();

        inflater.inflate(R.menu.example_context_menu, menu);

    }
    public boolean onContextItemSelected(MenuItem item){
        switch (item.getItemId()){
            case R.id.delete:
                AdapterView.AdapterContextMenuInfo info = (AdapterView.AdapterContextMenuInfo) item.getMenuInfo();
                System.out.println(info.position);
                arrayList.remove(info.position);
                simpleAdapter.notifyDataSetChanged();
                Toast.makeText(MainActivity.this, "Item Deleted", Toast.LENGTH_LONG).show();
                break;
            case R.id.share:
                Toast.makeText(MainActivity.this, "Item Shared", Toast.LENGTH_LONG).show();
                break;
        }
        return true;
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu){
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.example_menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        switch (item.getItemId()){
            case R.id.item1:
                //add
                Intent put = new Intent(getApplicationContext(), AddEvent.class);
                startActivityForResult(put, 1);
                break;
            case R.id.item2a:
                //sort by name
                Comparator<HashMap<String, String>> mapComparator = new Comparator<HashMap<String,String>>() {

                    @Override
                    public int compare(HashMap<String, String> o1, HashMap<String, String> o2) {
                        // Get the distance and compare the distance.
                        String first = o1.get("EventName");
                        String second = o2.get("EventName");

                        Toast.makeText(MainActivity.this, "Sorted By Name", Toast.LENGTH_LONG).show();
                        return first.compareTo(second);
                    }
                };
                Collections.sort(arrayList, mapComparator);
                simpleAdapter.notifyDataSetChanged();

                System.out.println(arrayList);
                break;

            case R.id.item2b:
                // sort by date
                Comparator<HashMap<String, String>> mapComparator1 = new Comparator<HashMap<String,String>>() {

                    @Override
                    public int compare(HashMap<String, String> o1, HashMap<String, String> o2) {
                        // Get the distance and compare the distance.
                        String first = o1.get("EventDate");
                        String second = o2.get("EventDate");
                        Toast.makeText(MainActivity.this, "Sorted By Date", Toast.LENGTH_LONG).show();
                        return first.compareTo(second);
                    }
                };
                Collections.sort(arrayList, mapComparator1);

                simpleAdapter.notifyDataSetChanged();

                System.out.println(arrayList);
                break;
            case R.id.item3:
                //search
                Esearch.setSelected(true);
                Esearch.addTextChangedListener(new TextWatcher() {
                    @Override
                    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

                    }

                    @Override
                    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                        MainActivity.this.simpleAdapter.getFilter().filter(charSequence);
                        simpleAdapter.notifyDataSetChanged();
                    }

                    @Override
                    public void afterTextChanged(Editable editable) {

                    }
                });

        }
        return true;
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(requestCode==1){
            String name = data.getStringExtra("Name");
            String date = data.getStringExtra("Date");
            HashMap<String, String> map = new HashMap<>();
            map.put("EventName", name);
            map.put("EventDate", date);
            arrayList.add(map);
            System.out.println(arrayList);
            //setContentView(R.layout.listview_display);
            //System.out.println(name+" "+date);

            String[] from={"EventName","EventDate"};//string array
            int[] to={R.id.eventName, R.id.eventDate};//int array of views id's

            simpleAdapter=new SimpleAdapter(this,arrayList,R.layout.listview_display,from,to);//Create object and set the parameters for simpleAdapter
            listView.setTextFilterEnabled(true);
            listView.setAdapter(simpleAdapter);//sets the adapter for listView

        }
    }

}




